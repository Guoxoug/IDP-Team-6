Control architecture:
c++ on arduino
    basic conditional statements triggered by serial input
    functions that can be called that control the servos
    input from sensors as serial output (need to be digital)
Python on PC
    Controller here
    Does all the decision making (if it is even needed)
    Takes serial input and outputs byte-strings to arduino

Python program structure



Arduino Python interface
    Python takes arduino bytestring and is able to convert back to characters
    C++ to get char from byte need to convert using char()
    Better to declare a charstring to write into (no standard library for string in Arduino :(
    Arduino stores incoming bytes in buffer (64 byte size)
    Arduino discards new data if buffer is full
    Read data is stored into memory and removed from buffer
    Probably same deal on PC  side but none issue since buffer will be much larger

    bytes([0]) makes a byte that is converted to int 0  in the arduino

    serialEvent:
        function that is called when data is available in buffer


    Python buffer:
        read given number of bytes from buffer
        can read until specified byte
        timeout: amount of time it waits for bytes to coming, exits after time runs out even if not all bytes read
        stops script during timeout

        Maybe: get number of bytes in read buffer (in_waiting()) and then read all of the bytes and reset_input_buffer()
        Then decode and deal with separately at the start of each while loop

        NEED ardunio output bytecode then


    Calibration
        get robot to drive from one end of the arena to the other
        contact switches detect wall
        measure distance using CV and time in Python
        Get it to spin and use CV to calibrate

